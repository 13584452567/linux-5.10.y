--- net/mac80211/rc80211_minstrel_ht_debugfs.c
+++ net/mac80211/rc80211_minstrel_ht_debugfs.c
@@ -52,6 +52,7 @@ minstrel_ht_stats_dump(struct minstrel_h
 
 	for (j = 0; j < MCS_GROUP_RATES; j++) {
 		struct minstrel_rate_stats *mrs = &mi->groups[i].rates[j];
+		static const int bitrates[4] = { 10, 20, 55, 110 };
 		int idx = i * MCS_GROUP_RATES + j;
 		unsigned int duration;
 
@@ -66,9 +67,6 @@ minstrel_ht_stats_dump(struct minstrel_h
 			p += sprintf(p, "VHT%c0 ", htmode);
 			p += sprintf(p, "%cGI ", gimode);
 			p += sprintf(p, "%d  ", mg->streams);
-		} else if (i == MINSTREL_OFDM_GROUP) {
-			p += sprintf(p, "OFDM       ");
-			p += sprintf(p, "1 ");
 		} else {
 			p += sprintf(p, "CCK    ");
 			p += sprintf(p, "%cP  ", j < 4 ? 'L' : 'S');
@@ -86,12 +84,7 @@ minstrel_ht_stats_dump(struct minstrel_h
 		} else if (gflags & IEEE80211_TX_RC_VHT_MCS) {
 			p += sprintf(p, "  MCS%-1u/%1u", j, mg->streams);
 		} else {
-			int r;
-
-			if (i == MINSTREL_OFDM_GROUP)
-				r = minstrel_ofdm_bitrates[j % 8];
-			else
-				r = minstrel_cck_bitrates[j % 4];
+			int r = bitrates[j % 4];
 
 			p += sprintf(p, "   %2u.%1uM", r / 10, r % 10);
 		}
@@ -131,8 +124,16 @@ minstrel_ht_stats_open(struct inode *ino
 	struct minstrel_ht_sta *mi = &msp->ht;
 	struct minstrel_debugfs_info *ms;
 	unsigned int i;
+	int ret;
 	char *p;
 
+	if (!msp->is_ht) {
+		inode->i_private = &msp->legacy;
+		ret = minstrel_stats_open(inode, file);
+		inode->i_private = msp;
+		return ret;
+	}
+
 	ms = kmalloc(32768, GFP_KERNEL);
 	if (!ms)
 		return -ENOMEM;
@@ -198,6 +199,7 @@ minstrel_ht_stats_csv_dump(struct minstr
 
 	for (j = 0; j < MCS_GROUP_RATES; j++) {
 		struct minstrel_rate_stats *mrs = &mi->groups[i].rates[j];
+		static const int bitrates[4] = { 10, 20, 55, 110 };
 		int idx = i * MCS_GROUP_RATES + j;
 		unsigned int duration;
 
@@ -212,8 +214,6 @@ minstrel_ht_stats_csv_dump(struct minstr
 			p += sprintf(p, "VHT%c0,", htmode);
 			p += sprintf(p, "%cGI,", gimode);
 			p += sprintf(p, "%d,", mg->streams);
-		} else if (i == MINSTREL_OFDM_GROUP) {
-			p += sprintf(p, "OFDM,,1,");
 		} else {
 			p += sprintf(p, "CCK,");
 			p += sprintf(p, "%cP,", j < 4 ? 'L' : 'S');
@@ -231,13 +231,7 @@ minstrel_ht_stats_csv_dump(struct minstr
 		} else if (gflags & IEEE80211_TX_RC_VHT_MCS) {
 			p += sprintf(p, ",MCS%-1u/%1u,", j, mg->streams);
 		} else {
-			int r;
-
-			if (i == MINSTREL_OFDM_GROUP)
-				r = minstrel_ofdm_bitrates[j % 8];
-			else
-				r = minstrel_cck_bitrates[j % 4];
-
+			int r = bitrates[j % 4];
 			p += sprintf(p, ",%2u.%1uM,", r / 10, r % 10);
 		}
 
@@ -280,9 +274,18 @@ minstrel_ht_stats_csv_open(struct inode
 	struct minstrel_ht_sta *mi = &msp->ht;
 	struct minstrel_debugfs_info *ms;
 	unsigned int i;
+	int ret;
 	char *p;
 
+	if (!msp->is_ht) {
+		inode->i_private = &msp->legacy;
+		ret = minstrel_stats_csv_open(inode, file);
+		inode->i_private = msp;
+		return ret;
+	}
+
 	ms = kmalloc(32768, GFP_KERNEL);
+
 	if (!ms)
 		return -ENOMEM;
 
